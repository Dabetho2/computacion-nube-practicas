version: "3.9"

services:
  db:
    image: mysql:5.7
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: myflaskapp
    volumes:
      - vagrant_db_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/01_init.sql:ro
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-proot"]
      interval: 5s
      timeout: 3s
      retries: 30

  users:
    build: ./microUsers
    restart: unless-stopped
    environment:
      DB_HOST: db
      DB_USER: root
      DB_PASSWORD: root
      DB_NAME: myflaskapp
    depends_on:
      db:
        condition: service_healthy
      consul:
        condition: service_started
    ports:
      - "5002:5002"

  products:
    build: ./microProducts
    restart: unless-stopped
    environment:
      DB_HOST: db
      DB_USER: root
      DB_PASSWORD: root
      DB_NAME: myflaskapp
    depends_on:
      db:
        condition: service_healthy
      consul:
        condition: service_started
    ports:
      - "5003:5003"

  orders:
    build: ./microOrders
    restart: unless-stopped
    environment:
      DB_HOST: db
      DB_USER: root
      DB_PASSWORD: root
      DB_NAME: myflaskapp
      # Para que orders llame a products dentro de la red del compose
      PRODUCTS_BASE: http://products:5003
    depends_on:
      db:
        condition: service_healthy
      consul:
        condition: service_started
      products:
        condition: service_started
    ports:
      - "5004:5004"

  frontend:
    build: ./frontend
    restart: unless-stopped
    depends_on:
      consul:
        condition: service_started
    ports:
      - "5001:5001"
    # Hot reload de HTML/JS/CSS:
    volumes:
      - ./frontend/web:/app/web:rw
    environment:
      FLASK_ENV: development

  consul:
    image: hashicorp/consul:1.15
    restart: unless-stopped
    command: agent -server -bootstrap -ui -bind=0.0.0.0 -client=0.0.0.0
    ports:
      - "8500:8500"
    volumes:
      - consul_data:/consul/data
      - ./consul.d:/consul/config

volumes:
  vagrant_db_data:
  consul_data:
